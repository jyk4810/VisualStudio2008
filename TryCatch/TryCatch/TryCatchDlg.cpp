
// TryCatchDlg.cpp : 구현 파일
//

#include "stdafx.h"
#include "TryCatch.h"
#include "TryCatchDlg.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 응용 프로그램 정보에 사용되는 CAboutDlg 대화 상자입니다.

class CAboutDlg : public CDialog
{
public:
	CAboutDlg();

// 대화 상자 데이터입니다.
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 지원입니다.

// 구현입니다.
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
END_MESSAGE_MAP()


// CTryCatchDlg 대화 상자




CTryCatchDlg::CTryCatchDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CTryCatchDlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CTryCatchDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CTryCatchDlg, CDialog)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	//}}AFX_MSG_MAP
	ON_STN_CLICKED(IDC_STATIC_A1, &CTryCatchDlg::OnStnClickedStaticA1)
END_MESSAGE_MAP()


// CTryCatchDlg 메시지 처리기

BOOL CTryCatchDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// 시스템 메뉴에 "정보..." 메뉴 항목을 추가합니다.

	// IDM_ABOUTBOX는 시스템 명령 범위에 있어야 합니다.
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 이 대화 상자의 아이콘을 설정합니다. 응용 프로그램의 주 창이 대화 상자가 아닐 경우에는
	//  프레임워크가 이 작업을 자동으로 수행합니다.
	SetIcon(m_hIcon, TRUE);			// 큰 아이콘을 설정합니다.
	SetIcon(m_hIcon, FALSE);		// 작은 아이콘을 설정합니다.

	// TODO: 여기에 추가 초기화 작업을 추가합니다.

	return TRUE;  // 포커스를 컨트롤에 설정하지 않으면 TRUE를 반환합니다.
}

void CTryCatchDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialog::OnSysCommand(nID, lParam);
	}
}

// 대화 상자에 최소화 단추를 추가할 경우 아이콘을 그리려면
//  아래 코드가 필요합니다. 문서/뷰 모델을 사용하는 MFC 응용 프로그램의 경우에는
//  프레임워크에서 이 작업을 자동으로 수행합니다.

void CTryCatchDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 그리기를 위한 디바이스 컨텍스트

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 클라이언트 사각형에서 아이콘을 가운데에 맞춥니다.
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 아이콘을 그립니다.
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialog::OnPaint();
	}
}

// 사용자가 최소화된 창을 끄는 동안에 커서가 표시되도록 시스템에서
//  이 함수를 호출합니다.
HCURSOR CTryCatchDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}


void CTryCatchDlg::OnEnUpdateEditInteger()
{


}

BOOL CTryCatchDlg::PreTranslateMessage(MSG* pMsg)
{
	if(pMsg->message == WM_KEYDOWN && GetDlgItem(IDC_EDIT_A1) == GetFocus())			
	{
		switch(pMsg->wParam)			
		{			
		case VK_RETURN:
			{
				SetIntegerParam(TYPE_A1);
			}
		default:
			break;
		}
	}
	else if(pMsg->message == WM_KEYDOWN && GetDlgItem(IDC_EDIT_A2) == GetFocus())			
	{
		switch(pMsg->wParam)			
		{			
		case VK_RETURN:
			{
				SetIntegerParam(TYPE_A2);
			}
		default:
			break;
		}
	}
	if(pMsg->message == WM_KEYDOWN)			
	{
		switch(pMsg->wParam)
		{			
		case VK_RETURN:			
			
		case VK_ESCAPE:			
			return TRUE;			
		default:			
			break;			
		}
	}

	return CDialog::PreTranslateMessage(pMsg);
}

void CTryCatchDlg::SetIntegerParam( int type )
{	
	switch(type)
	{
	case TYPE_A1:
		{
			try // 트라이
			{
				int value = GetDlgItemInt(IDC_EDIT_A1);
			
				if( value>=10 )
				{
					int b = 0;
					throw(b);
				}
			}
			
			catch(int e) // throw가 int를 받을때 catch
			{
				e = e;
			}
			catch(CString strE)	//throw가 CString을 받을때 catch
			{
				strE = strE;
			}
			catch(...) // 그 외(default) catch
			{
				CString strTemp = _T("");
				char cc[10] = {0,};
				(CStatic*)GetDlgItem(IDC_STATIC_A1)->GetWindowText((LPTSTR)cc,3);
				strTemp = (LPCTSTR)cc;
				CString strMessage = _T("");
				strMessage.Format( _T(" %s 에서 %d 에러 발생 "), strTemp , RANGE_ERR);
				AfxMessageBox(strMessage);
			}
		}
		break;
	case TYPE_A2:
		{
			try
			{
				int value = GetDlgItemInt(IDC_EDIT_A2);

				if( value>=10 )
				{
					int b = 0;
					throw(b);
				}
			}
			catch(...) //default 에러 캐치
			{
				CString strTemp = _T("");
				char cc[10] = {0,};
				(CStatic*)GetDlgItem(IDC_STATIC_A2)->GetWindowText((LPTSTR)cc,3);
				strTemp = (LPCTSTR)cc;
				CString strMessage = _T("");
				strMessage.Format( _T(" %s 에서 %d 에러 발생 "), strTemp , RANGE_ERR);
				AfxMessageBox(strMessage);
			}
		}
		break;
	default:
		break;

	}
		
	
}
void CTryCatchDlg::OnStnClickedStaticA1()
{
	// TODO: 여기에 컨트롤 알림 처리기 코드를 추가합니다.
}
